# 2023-11-06 07:30
name: ConEmu - release

on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
  workflow_dispatch:
    inputs:
      msbuild_cl_x64_release:
        default: true
        type: boolean
      msbuild_cl_x86_release:
        default: false
        type: boolean
      msbuild_cl_ARM64_release:
        default: false
        type: boolean

env:
  PROG_NAME: "ConEmu"
  TAG_NAME: "ConEmu-release"
  ConEmu_version: "230724"

jobs:
#------------------------------------------------------------------------------
  build-msbuild:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        build: [ 
#                 msbuild_cl_x64_debug,
                 msbuild_cl_x64_release,
#                 msbuild_cl_x86_debug,
#                 msbuild_cl_x86_release,
#                 msbuild_cl_ARM64_release,
               ]
  
        include:
#          - { build: msbuild_cl_x64_debug,     compiler: msbuild_cl, arch: amd64,       platform_sln: x64,   platform_name: x64,   build_config: Debug }
          - { build: msbuild_cl_x64_release,   compiler: msbuild_cl, arch: amd64,       platform_sln: x64,   platform_name: x64,   build_config: Release }
#          - { build: msbuild_cl_x86_debug,     compiler: msbuild_cl, arch: amd64_x86,   platform_sln: Win32, platform_name: x86,   build_config: Debug }
#          - { build: msbuild_cl_x86_release,   compiler: msbuild_cl, arch: amd64_x86,   platform_sln: Win32, platform_name: x86,   build_config: Release }
#          - { build: msbuild_cl_ARM64_release, compiler: msbuild_cl, arch: amd64_arm64, platform_sln: ARM64, platform_name: ARM64, build_config: Release }

    steps:
      - name: Checkout source
        uses: deep-soft/checkout@v3
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          submodules: true
          fetch-depth: 2

      - name: Get program version
        continue-on-error: false
        shell: bash
        run: |
          echo "Version from WhatsNew-ConEmu.txt"
          # ConEmu_version=$(head -n 30 "Release\ConEmu\WhatsNew-ConEmu.txt" | find "20%BUILD_NO:~0,2%.%BUILD_NO:~2,2%.%BUILD_NO:~4,2%")
          ConEmu_version=$(grep "^20" "Release\ConEmu\WhatsNew-ConEmu.txt" | head -n 1)
          echo "VERSION=$ConEmu_version"
          echo "VERSION=$ConEmu_version" >> $GITHUB_ENV

      - name: Print program version
        continue-on-error: false
        shell: bash
        run: |
          echo "Print program version"
          echo ${{ env.VERSION }}

      - name: Set MSVC environment
        uses: deep-soft/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Set environment for debug build
        if: matrix.build_config  == 'Debug'
        run: Add-Content -Path $env:GITHUB_ENV -Value "DEBUG=1"

      - name: Build (cl)
        #working-directory: _build/vc
        run: 
             # msbuild -m /property:Configuration=${{ matrix.build_config }} /property:Platform=${{ matrix.platform_sln }} all.sln
             msbuild src\CE.sln /p:platform="x64" /p:configuration="Release"

#       - name: Create zip
#         continue-on-error: true
#         working-directory: _build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_sln }}
#         run: |
#           dir ./
#           Compress-Archive . ../Far.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip
#           dir ../

      - name: Create Zip Archive Release
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: 'ConEmu.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip'
          #directory: '_build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_sln }}'
          directory: '.'
          #exclusions: '*.map *.pdb'
          #recursive_exclusions: '*.map *.pdb changelog *Bel.lng *Cze.lng *Ger.lng *Hun.lng *Ita.lng *Lit.lng *Pol.lng *Rus.lng *Sky.lng *Spa.lng *Ukr* *Bel.hlf *Cze.hlf *Ger.hlf *Hun.hlf *Ita.hlf *Lit.hlf *Pol.hlf *Rus.hlf *Sky.hlf *Spa.hlf *Ukr*'
          path: '.'

      - name: Upload zip
        continue-on-error: true
        uses: deep-soft/upload-artifact@main
        with:
          name: ConEmu.${{ matrix.build_config }}.${{ matrix.platform_name }}.${{ env.VERSION }}.zip
          #path: _build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_sln }}/ConEmu.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip
          path: ${{ env.ZIP_RELEASE_ARCHIVE }}

#      - name: Upload folder
#        continue-on-error: true
#        uses: deep-soft/upload-artifact@main
#        with:
#          name: ConEmu.${{ matrix.build_config }}.${{ matrix.platform_name }}
#          path: _build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_sln }}

#      - name: Create list file
#        continue-on-error: true
#        shell: bash
#        run: |
#          list_file="ConEmu.${{ matrix.build }}-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.platform_sln }}-${{ matrix.platform_name }}-${{ matrix.build_config }}.txt"
#          ls -lR > $list_file
#          echo "LIST_File=$list_file" >> $GITHUB_ENV

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}
#          files: |
#            ${{ env.LIST_File }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Prepare latest Release
        continue-on-error: false
        shell: bash
        run: |
          mv ${{ env.ZIP_RELEASE_ARCHIVE }} ${{ env.PROG_NAME }}.${{ matrix.platform_name }}.zip
          echo "${{ env.VERSION }}" > ${{ env.PROG_NAME }}-latest.txt

      - name: Publish latest Release
        continue-on-error: false
        uses: deep-soft/action-gh-release@v1
        with:
          draft: false
          tag_name: ${{ env.PROG_NAME }}-latest
          body: "${{ env.PROG_NAME }} latest: v${{ env.VERSION }}"
          files: |
            ${{ env.PROG_NAME }}.${{ matrix.platform_name }}.zip
            ${{ env.PROG_NAME }}-latest.txt
